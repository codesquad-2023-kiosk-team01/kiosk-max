name: frontend-cicd

on:
  pull_request:
    branches:
      - release
      - frontend

env:
  working-directory: ./frontend
  AWS_REGION: ap-northeast-2
  S3_BUCKET_NAME: kiosk-team01-actions-front-bucket
  CODE_DEPLOY_APPLICATION_NAME: kiosk-codedeploy-app
  CODE_DEPLOY_DEPLOYMENT_GROUP_NAME: kiosk-codedeploy-deployment-front-group

permissions:
  contents: read

jobs:
  deploy:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
        working-directory: ./frontend

    steps:
      # Source 단계
      - name: Checkout Source Code
        uses: actions/checkout@v3

      # node 설치
      - name: Set up node
        uses: actions/setup-node@v2
        with:
          node-version: 18

      # 의존성 파일 설치
      - name: Install dependencies
        run: npm install

      # Node v 확인
      - name: Check Node v
        run: node -v

      # React build
      - name: React Build
        run: npm run build

      # 3.1 AWS 권한 부여
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_PRIVATE_ACCESS_KEY }}
          aws-region: ${{env.AWS_REGION}}

        # 3. S3에 파일 업로드(zip 으로 압축 → AWS 권한 부여 → S3로 전송)
        # 3.1 zip 으로 압축
      - name: Make zip file
        run: zip -r build.zip build

        # 3.3 S3로 전송
      - name: Upload to S3
        run: aws s3 sync
          --region '${{ env.AWS_REGION }}'
          build s3://$S3_BUCKET_NAME

        # 4. Code Deploy 단계
      - name: Code Deploy
        run: aws deploy create-deployment
          --application-name $CODE_DEPLOY_APPLICATION_NAME
          --deployment-config-name CodeDeployDefault.AllAtOnce
          --deployment-group-name $CODE_DEPLOY_DEPLOYMENT_GROUP_NAME
          --s3-location bucket=$S3_BUCKET_NAME,bundleType=zip,key=Build

